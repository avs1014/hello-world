
#define _CRT_SECURE_NO_WARNINGS
#define NUMS 4
#include <stdio.h>

int main() {
	int lowTempList[NUMS];
	int highTempList[NUMS];
	int day;

	float avgLowTemp;
	float avgHighTemp;
	float avgTemp;
	int lowestTemp;
	int highestTemp;
	int lowestTempDay;
	int highestTempDay;

	printf("---=== IPC Temperature Analyzer ===---");

	for (day = 0; day < NUMS; day++) {
		printf("\nEnter the high value for day %d: ", day + 1);
		scanf("%d", &highTempList[day]);

		printf("\nEnter the low value for day %d: ", day + 1);
		scanf("%d", &lowTempList[day]);

		while (highTempList[day] > 40 || lowTempList[day] < -40 || highTempList[day] < lowTempList[day]) {
			day = day - 1;
			printf("\nIncorrect values, temperatures must be in the range -40 to 40, high must be greater than low.\n");
			break;
		}
	}

	avgLowTemp = (float)(lowTempList[0] + lowTempList[1] + lowTempList[2] + lowTempList[3]) / NUMS;
	avgHighTemp = (float)(highTempList[0] + highTempList[1] + highTempList[2] + highTempList[3]) / NUMS;
	avgTemp = (float)(avgLowTemp + avgHighTemp) / 2;
	printf("\n");
	printf("The average (mean) LOW temperature was: %.2f\n", avgLowTemp);
	printf("The average (mean) HIGH temperature was: %.2f\n", avgHighTemp);
	printf("The average (mean) temperature was: %.2f\n", avgTemp);

	for (day = 0; day < NUMS; day++) {
		if (day == 0) {
			highestTemp = highTempList[day];
			lowestTemp = lowTempList[day];
		}

		// Get highest temp and day
		if (highTempList[day] > highestTemp) {
			highestTemp = highTempList[day];
			highestTempDay = day + 1;
		}

		// Get lowest temp and day
		if (lowTempList[day] < lowestTemp) {
			lowestTemp = lowTempList[day];
			lowestTempDay = day + 1;
		}
	}

	printf("The highest temperature was %d, on day %d\n", highestTemp, highestTempDay);
	printf("The lowest temperature was %d, on day %d\n", lowestTemp, lowestTempDay);

	return 0;
}
